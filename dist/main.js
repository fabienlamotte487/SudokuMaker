(()=>{"use strict";class t{constructor(){this.grid=[],this.gridSolution=[],this.gridDifficulty=[],this.url="https://sudoku-api.vercel.app/api/dosuku",this.containerGrid=document.querySelector("main .grid"),this.numbers=document.querySelectorAll("main .numbers .numbers-items button"),this.loadPanel=document.querySelector("body .load-panel"),this.loadClassname="loading",this.init()}init(){this.prepareGrid(),this.prepareNumberButtons()}prepareGrid(){this.loadGrid(),this.fetchSudoku(),this.buildGrid(),this.showGrid()}prepareNumberButtons(){this.numbers.forEach((t=>{t.addEventListener("click",(t=>{const s=t.getAttribute("data-value");alert(s)}))}))}loadGrid(){this.loadPanel.classList.contains(this.loadClassname)||this.loadPanel.classList.add(this.loadClassname)}showGrid(){this.loadPanel.classList.contains(this.loadClassname)&&this.loadPanel.classList.remove(this.loadClassname)}buildGrid(){}async fetchSudoku(){try{const t=await fetch(this.url),s=await t.json();this.grid=s.newboard.grids[0].value,this.grid=s.newboard.grids[0].solution}catch(t){console.error("Error fetching Sudoku:",t)}}}document.addEventListener("DOMContentLoaded",(function(){new t}))})();